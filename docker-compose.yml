
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      - PORT=${PORT}
      - AUTH_API_ADDRESS=${AUTH_API_ADDRESS}
      - TODOS_API_ADDRESS=${TODOS_API_ADDRESS}
    ports:
      - "8080:8080"
    depends_on:
      - auth-api
      - todos-api
      - users-api
    networks:
      - redis-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(audu.zapto.org)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

      

  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    container_name: auth-api
    environment:
      - AUTH_API_PORT=${AUTH_API_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - USERS_API_ADDRESS=${USERS_API_ADDRESS}
    ports:
      - "8081:8081"
    labels:
      - "traefik.http.routers.auth-api-path.rule=Host(audu.zapto.org) && PathPrefix(/api/auth)"
      - "traefik.http.routers.auth-api-path.entrypoints=websecure"
      - "traefik.http.routers.auth-api-path.tls=true"
      - "traefik.http.middlewares.auth-strip-prefix.stripprefix.prefixes=/api/auth"
      - "traefik.http.routers.auth-api-path.middlewares=auth-strip-prefix"
      - "traefik.http.services.auth-api.loadbalancer.server.port=8081"
    depends_on:
      - redis-queue
    networks:
      - redis-network

  todos-api:
    build:
      context: ./todos-api
      dockerfile: Dockerfile
    container_name: todos-api
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    ports:
      - "8082:8082"
    labels:
      - "traefik.http.routers.todos-api-path.rule=Host(audu.zapto.org) && PathPrefix(/api/todos)"
      - "traefik.http.routers.todos-api-path.entrypoints=websecure"
      - "traefik.http.routers.todos-api-path.tls=true"
      - "traefik.http.middlewares.todos-strip-prefix.stripprefix.prefixes=/api/todos"
      - "traefik.http.routers.todos-api-path.middlewares=todos-strip-prefix"
      - "traefik.http.services.todos-api.loadbalancer.server.port=8082"
  
    depends_on:
      - redis-queue
    networks:
      - redis-network 

  users-api:
    build:
      context: ./users-api
      dockerfile: Dockerfile
    container_name: users-api
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8083:8083"
    labels:
      - "traefik.http.routers.users-api-path.rule=Host(audu.zapto.org) && PathPrefix(/api/users)"
      - "traefik.http.routers.users-api-path.entrypoints=websecure"
      - "traefik.http.routers.users-api-path.tls=true"
      - "traefik.http.middlewares.users-strip-prefix.stripprefix.prefixes=/api/users"
      - "traefik.http.routers.users-api-path.middlewares=users-strip-prefix"
      - "traefik.http.services.users-api.loadbalancer.server.port=8083"
    depends_on:
      - redis-queue
    networks:
      - redis-network

  log-message-processor:
    build:
      context: ./log-message-processor
      dockerfile: Dockerfile
    container_name: log-message-processor
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    depends_on:
      - redis-queue
    networks:
      - redis-network

  redis-queue:
    image: redis:latest
    container_name: redis-queue
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - redis-network
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3



  traefik:
    image: docker.io/library/traefik:v3.3.3
    container_name: traefik
    command:             
      - --providers.docker=true             
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik/config
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=simplymailmatthew7@gmail.com
      - --certificatesresolvers.myresolver.acme.storage=/etc/traefik/acme/acme.json 
    ports:
      - 80:80
      - 443:443
      - 8087:8080
    volumes:
      - ./traefik/config/traefik.yml:/etc/traefik/traefik.yml:ro
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./traefik/acme:/etc/traefik/acme
      - ./traefik/config/:/etc/traefik

    networks:
      - redis-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=dashboard"
    restart: unless-stopped

networks:
  redis-network:
    driver: bridge

volumes:
  redis_data: